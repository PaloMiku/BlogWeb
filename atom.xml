<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mikuの次行星</title>
  
  <subtitle>心有多宽，世界就有多远</subtitle>
  <link href="http://tkgso.fun/atom.xml" rel="self"/>
  
  <link href="http://tkgso.fun/"/>
  <updated>2024-07-17T08:44:25.956Z</updated>
  <id>http://tkgso.fun/</id>
  
  <author>
    <name>Miku鬆</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>个人人际交往杂谈</title>
    <link href="http://tkgso.fun/posts/3.html"/>
    <id>http://tkgso.fun/posts/3.html</id>
    <published>2024-07-14T12:40:00.000Z</published>
    <updated>2024-07-17T08:44:25.956Z</updated>
    
    <content type="html"><![CDATA[<p>我是一个00后，我出生在2006年，今年刚好18岁了，我属于那批后00后的年轻人了。我认识的，我见过的，那些跟我差不多大的人，他们出去玩都喜欢干什么呢？唱KTV，打台球，耍车。我个人属于不怎么擅长现实交际的，在现实里不喜欢外出参与我刚才说的这类活动。</p><p>抽烟，喝酒，嚼槟榔。我身边认识的一些人他们常常向我安利这些活动。我个人偶尔会喝点啤酒，比如家里吃些油腻的饭菜啊，给我的朋友庆祝生日，家里举办活动都会喝点。但除此之外，我不想抽烟，也不想把酒当水喝，更不想嚼槟榔。</p><p>但是我认识的这些朋友，当然可以说我只是点出了我认识的一部分“融入社会”的朋友，不是说我身边只有这样的朋友。他们常常属于那些我们年轻人认为的“成功人士”，这个成功人士不是说那种商业层面的，而是从我们这一代认知层面的。他们常常跟我说，你不抽烟，很多事情很难办。这是我一个“成功”朋友说的，他可以说确实符合现代我们认识的成功，有肤白貌美的女朋友，两天收入一部苹果15 Pro的金钱，他似乎比一些90后打工者，00后打工者都要成功，毕竟这些打工者忙活一个月可能才赚出了他两天忙活的钱。</p><p>在我看来，他这个成功就是“投机倒把”，这只能说是我的个人观点，但他跟我“装逼”装的天花乱坠，还建议我也来干，我自己也在假期干点小兼职，送外卖什么的。</p><p>他自己跟我说的那些工作包括了以下内容：</p><ul><li>“发短信”：跟我说给别人发短信，用自己的手机号发，发一条给五六块钱，一天发上几百条，那就是发的短信条数乘以五的RMB入账。一听就知道应该不是正经短信，当我想要询问他发的什么短信时遭到了他的拒绝，他就说你干不干吧，我说违法的不干，他说谁抓的到你？我反正推脱了一下，表示了我不干的意思。</li><li>“卖孩子”：肯定不是我们理解的那个卖孩子，如果真是那个卖孩子，在当下环境看，我这个朋友应该是坐在号子里跟我说这个。我想要具体了解内容时也遭到了他的拒绝，他的意思是你要干我才跟你说。我并没有兴趣做什么“地下记者”。去接受这类不知道什么东西然后揭露他们。我含蓄的表示了我的拒绝。后来听别人讲起，大概可能是“投机倒把”，倒卖自行车。虽然不能理解为什么这玩意被叫做“卖孩子”，但应该是个合法行业？（<del>倒卖自行车两天换苹果15 Pro在我看来有点过于梦幻</del>）</li></ul><p>然后，我前边也说过了，他建议我学会抽烟，说你不抽这一口，很多事情很难办。这我大概有些体会：我在兼职干外卖的时候，有一回我的电动车坏掉了，当时在骑手群里有位大哥问讯跑了五公里来帮忙（真的很感谢这位大哥，好人一生平安），没解决车子的问题，我俩在坐着闲聊的时候他下意识给我递了根烟，我说我不抽烟，他感慨：“好孩子啊！”我的表情大概可能是这样：😅。</p><p>不过这也反映了几点：</p><ul><li>在他认知里，快速拉近社交距离的方式是递根烟。我们可以说这是寻找共同点的一种方式 ，你抽烟，我也抽烟，我俩就有这么个共同点。然后就可以开始聊天了。</li><li>我如果接下这根烟，就像在酒吧里相遇递杯酒一样，大家手里有这么个消磨情绪或者说表示身份的东西，显得很正常，我不接就显得有些怪异。</li><li>这是他开始聊天的习惯性动作，证明他身边有好友，或者经常社交时都是互相递烟，烟已经成为了一种社交品。递烟的时候也可以问问你这是什么牌子，好不好吃，在什么地方买的，花了多少钱买的？</li></ul><p>以上几点其实也反映了人际社交基本的事情：“有共同点，找共同话题。”</p><p>没共同点怎么打开这个话题？不好开，两个世界的人难以凑到一块，就像别人给你说今天股市怎么样，你跟他说今天玩了什么游戏，玩的怎么样一样。没有个交流基本开头，是难以开始聊天的。更不用说在现在这个人人都带个面具的时代完成“交心”式聊天。</p><p>我厌恶这种人际交流方式，我的很多社交都是在网络上完成的，在网上我认识了不少志同道合的人。比如我喜欢番剧《擅长捉弄的高木同学》，通过它的QQ频道，其他社群我认识了一批网友，我们也有不少共同话题。</p><p>这就引出了我认为人际交往中的一个东西：“有一个共同点的人也有不少共同点。”这只是我的一个个人观点罢了。</p><p>总之说了这么多，其实我也是想吐槽一下现在人对于人际关系的观点，但是吐槽完了，似乎我还是要带上面具去处理这些人际关系，虽然我不会去抽烟，但是我肯定还是要想别的办法去融入现实人际交往，我不可能完全拒绝现实人际交往，除非我完全居家。</p><p>好，就先写到这里吧，先说明，以上这些都只是我的个人观点，如果你有什么疑问或者认为我写的有什么问题，欢迎邮件联系我或评论区指正。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我是一个00后，我出生在2006年，今年刚好18岁了，我属于那批后00后的年轻人了。我认识的，我见过的，那些跟我差不多大的人，他们出去玩都喜欢干什么呢？唱KTV，打台球，耍车。我个人属于不怎么擅长现实交际的，在现实里不喜欢外出参与我刚才说的这类活动。&lt;/p&gt;
&lt;p&gt;抽烟，喝</summary>
      
    
    
    
    <category term="生活" scheme="http://tkgso.fun/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="人际" scheme="http://tkgso.fun/tags/%E4%BA%BA%E9%99%85/"/>
    
    <category term="杂谈" scheme="http://tkgso.fun/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>Mix-Space：个人空间新体验</title>
    <link href="http://tkgso.fun/posts/1.html"/>
    <id>http://tkgso.fun/posts/1.html</id>
    <published>2024-04-30T16:00:00.000Z</published>
    <updated>2024-07-17T08:44:25.956Z</updated>
    
    <content type="html"><![CDATA[<p>　　在开始之前，我们先抛出一个问题：因为什么要使用 Mix-Space？</p><span id="more"></span><p>　　大多数外人其实只是图它好看（比如说围观到了 Innei 大佬的博客），但是当你真正上手时，会发现它与许多博客系统的不同之处，或者说，这是一套全新的个人空间系统形态。</p><p>　　大多数人其实鼓捣博客其实内心想法很简单，包括我在内也是差不多以下想法：</p><p>　　1.它要好看：就跟家里来客人，然后你家房子干不干净，漂不漂亮一样。</p><p>　　2.它要好玩：一个好玩的博客系统有效的给了博主们鼓捣和钻研的动力。</p><p>　　3.它要独特：什么 WordPress，Typecho，那都太 Low 了，我就要独特一下！</p><p>　　然后我就先看到了 <a href="https://xlog.app/">Xlog</a>，它确实好看，好玩，又独特。但很可惜在中国大陆地区，这玩意并不友好，先是主站域名被阻断，然后又是 IPFS 系统导致媒体在国内表现很差。然后每一次修改博文，还得 MetaMask 授权。</p><p>　　然后我们还有两位候选人：Halo 和 VanBlog。</p><p>　　Halo 的影响力其实已经不错了，但作为 Java 应用，内存占用是它的大头问题，1C1G 的小服务器是折腾不起这玩意，同样它出现的时间较短也导致了它的生态圈尚未完成。可用的主题和插件都还不够多样化。</p><p>　　VanBlog，前后端分离的博客系统，内存占用很小，强大后台面板，可以说我差一点就要把它当作我主用博客系统了，但在使用一段时间后暴露了不少问题，所以它也被我抛弃了。</p><p>　　然后，就要请出我们的主角 Mix-Space 了！它也是前后端分离的博客系统，但它的分离更加彻底，前端可以单独部署在 Serverless 平台，后端仅提供 Api 服务，性能和安全性都有不错的保障。它也好看，由 Innei 大佬操刀的 Shiro 主题，它如纸一般轻盈。Kami 主题则充满了浓浓的二次元风格。它也好玩，Xlog 同步，AI 文章摘要，前端显示博主状态，都是一个不错的个人空间选择。</p><p>　　（2024 年 7 月起个人站点已迁回到Hexo 博客系统。别问，问就是我发现我并不需要一个如此完善的「个人空间」）</p><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><p>　　Mix-Space 由 Core 后端和 Theme 前端构成，后端的部署使用 Docker，部署还算简单，按照<a href="https://mx-space.js.org/docs/docker">官方文档</a>部署即可。</p><p>　　值得注意的是要注意锁死MongoDB的版本号，防止在未来重部署时出现跨版本问题。</p><p>　　我使用的服务器面板是 1Panel，在网站设置这里配置好反向代理，绑定域名，证书。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server</span> &#123;</span><br><span class="line">    <span class="comment">## 反向代理开始</span></span><br><span class="line">    <span class="comment">## WebSocket</span></span><br><span class="line">    <span class="string">location</span> <span class="string">/socket.io</span> &#123;</span><br><span class="line">      <span class="string">proxy_pass</span> <span class="string">http://127.0.0.1:2333/socket.io;</span> </span><br><span class="line">      <span class="string">proxy_set_header</span> <span class="string">Host</span> <span class="string">$host;</span> </span><br><span class="line">      <span class="string">proxy_set_header</span> <span class="string">X-Real-IP</span> <span class="string">$remote_addr;</span> </span><br><span class="line">      <span class="string">proxy_set_header</span> <span class="string">X-Forwarded-For</span> <span class="string">$proxy_add_x_forwarded_for;</span> </span><br><span class="line">      <span class="string">proxy_set_header</span> <span class="string">REMOTE-HOST</span> <span class="string">$remote_addr;</span> </span><br><span class="line">      <span class="string">proxy_set_header</span> <span class="string">Upgrade</span> <span class="string">$http_upgrade;</span> </span><br><span class="line">      <span class="string">proxy_set_header</span> <span class="string">Connection</span> <span class="string">&quot;upgrade&quot;</span><span class="string">;</span> </span><br><span class="line">      <span class="string">proxy_buffering</span> <span class="string">off;</span></span><br><span class="line">      <span class="string">proxy_http_version</span> <span class="number">1.1</span><span class="string">;</span> </span><br><span class="line">      <span class="string">add_header</span> <span class="string">Cache-Control</span> <span class="literal">no</span><span class="string">-cache;</span> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">## Others</span></span><br><span class="line">    <span class="string">location</span> <span class="string">/</span> &#123;</span><br><span class="line">      <span class="string">proxy_pass</span> <span class="string">http://127.0.0.1:2333;</span> </span><br><span class="line">      <span class="string">proxy_set_header</span> <span class="string">Host</span> <span class="string">$host;</span> </span><br><span class="line">      <span class="string">proxy_set_header</span> <span class="string">X-Real-IP</span> <span class="string">$remote_addr;</span> </span><br><span class="line">      <span class="string">proxy_set_header</span> <span class="string">X-Forwarded-For</span> <span class="string">$proxy_add_x_forwarded_for;</span> </span><br><span class="line">      <span class="string">proxy_set_header</span> <span class="string">REMOTE-HOST</span> <span class="string">$remote_addr;</span> </span><br><span class="line">      <span class="string">add_header</span> <span class="string">X-Cache</span> <span class="string">$upstream_cache_status;</span> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">## 反向代理结束</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>　　然后通过域名&#x2F;proxy&#x2F;qaqdmin 即可访问后台进行初始化操作。</p><p>　　在4:3设备上，横屏显示时，初始化步骤可能会显示异常，此时建议把设备竖过来完成初始化。</p><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><p>　　Mix-Space有三款前端主题可选，但目前能够支持相关最新特性的只有Shiro（包括闭源版本Shiroi）</p><p>　　参照官方部署步骤完成Shiro部署。<br>    <div class="tag-plugin link dis-select"><a class="link-card plain" title="" href="https://mx-space.js.org/themes/shiro" target="_blank" rel="external nofollow noopener noreferrer" cardlink api="https://site-info-api.tkgso.fun" autofill="title,icon"><div class="left"><span class="title">https://mx-space.js.org/themes/shiro</span><span class="cap link footnote">https://mx-space.js.org/themes/shiro</span></div><div class="right"><div class="lazy img" data-bg="https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/link/8f277b4ee0ecd.svg"></div></div></a></div></p><p>　　值得注意的是，虽然Shiro可以部署到Netlify，但目前Netlify在中国大陆地区表现较差，部署到Vercel也只是「好一点」，建议搭配CDN食用主题。</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>　　Mix-Space作为一个个人开发者项目，其维护积极性和稳定性都不能完全得到保障。</p><p>　　目前前端主题Shiro也分出了Shiroi这个闭源分支，一些最新特性也是Shiroi独有。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;　　在开始之前，我们先抛出一个问题：因为什么要使用 Mix-Space？&lt;/p&gt;</summary>
    
    
    
    <category term="建站" scheme="http://tkgso.fun/categories/%E5%BB%BA%E7%AB%99/"/>
    
    
    <category term="Mix-Space" scheme="http://tkgso.fun/tags/Mix-Space/"/>
    
  </entry>
  
  <entry>
    <title>君と光：我与高木同学的故事</title>
    <link href="http://tkgso.fun/posts/takagi.html"/>
    <id>http://tkgso.fun/posts/takagi.html</id>
    <published>2024-02-29T16:00:00.000Z</published>
    <updated>2024-07-17T08:44:25.956Z</updated>
    
    <content type="html"><![CDATA[<p>一切要始于一次好奇的探寻…</p><p>我算是搭上了高木圈的末班车…在 2022 年的那个暑假，天气很热，在这样一个天气，没有什么是比家里蹲吹风扇，刷 B 站更好的事情了（Doge），于是我打开了 B 站，然后它给我推送了一个视频：“”西片太太开车预警“，我有点好奇的点进了这个视频，然后就有了一种莫名其妙的感觉：”这是什么番，我要看一看。”</p><p>在评论区的引导下，我在B站搜索到了《擅长捉弄的高木同学》第二季（当时B站并没有第一季，然而现在上线了也把视频那段删了，悲），我决定先看一看第二季，于是我打开了第二季第一集…</p><p>25 分钟后….</p><p>我：”甜啊！太甜了！“</p><p>于是我前往某些地方从第一季开始看，然后无法自拔…</p><p>没错，就这样我成为了一个高木粉！（<del>十分草率</del>）</p><h2 id="机缘"><a href="#机缘" class="headerlink" title="机缘"></a>机缘</h2><p>光看没人聊可不行啊？然后碰巧 QQ 有 QQ 频道这个功能，我便莫名其妙的去搜索高木同学，于是就加入了 QQ 频道，但此时我处于潜水状态，我选择再去二刷番剧（<del>扭动</del>），然后我在频道内搜寻相关资源打算存下来收藏看，但此时却发现频道还在使用万恶的百度网盘共享文件，这玩意的下载速度…简直要命，不过好在频道有一位大佬提供了番剧直链，我得以获取到了视频资源。</p><p>但作为一个爱折腾的人，碰巧此时，我对建站产生了兴趣并正在研究建站。在网上看到有人搭建资源站以后，我产生了一个改变了我以后在高木圈做的事情的想法：建一个资源站，让大家都能在线下载和预览高木同学的相关资源。</p><p>于是在一番钻研和鼓捣以后，<strong>2022 年 10 月</strong>，我建立了一个属于高木的资源站。</p><p>此时我在做的事情就是搬砖，把资源搬过去，不过这是一件麻烦的事情，我在频道把我的资源站拿了出来，然后此时对我之后建设起了重要贡献的人出现了－－牧丰</p><p>他看到了资源站并表示愿意帮我填充资源，这肯定是一件好事，能减少我的工作量，也能更快的完成资源站的基本建设。</p><p>于是在他的帮助下，我完成了基本资源建设，资源站就这样放在那。</p><h2 id="深入"><a href="#深入" class="headerlink" title="深入"></a>深入</h2><p>再往后随着我们兴趣的提升，已经不能简单的鼓捣一个资源站了，于是2023年末期有了木创社的雏形——一个Github组织，建设了高木Wiki站，高木Fan社区（<del>项目还是暴死了</del>），我也结识了更多朋友，比如<a href="https://blog.sakura.fun/">南栀</a>，还有<a href="https://waterapple09.com/">WaterApple</a>，<a href="https://blog.iceyear.eu.org/">Ice Year</a>等等，不尽其数，遇到了他们，大家也度过了一段快乐的时光。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><blockquote><p>本段结语来自Ice Year的文章《<a href="https://blog.iceyear.eu.org/2023/%E5%90%9B%E3%81%A8%E5%85%89/">君と光</a>》（<del>灵感丧失</del>）</p></blockquote><p>2023 年 10 月 12 日，《擅长捉弄人的高木同学》的漫画也正式完结。在夏日祭的烟火之下，相互的表明心意与拥抱圆满了一直脑补的场景（喜极而泣）。或许以后，了解高木同学的人可能终将会会逐渐减少吧，甚至哪怕是高木和西片也终将走向平常的生活（原高木同学可以印证）</p><p>然而，这种 “一期一会”，我想也正是《擅长捉弄人的高木同学》想表现的，没有惊天动地，没有缠绵萦绕，只是日常。细节与碎片中，更表现了高木与西片相遇的珍贵，也表现了观者与其相遇的珍贵。认真体悟其中的美好和温暖，这便是意义所在吧。多年以后，当回想起曾经的温暖的时候，“君と光 映すだけ”，便足够了。</p><p>期望每个人都可以遇到自己的高木同学与西片，可以遇见自己的光芒。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一切要始于一次好奇的探寻…&lt;/p&gt;
&lt;p&gt;我算是搭上了高木圈的末班车…在 2022 年的那个暑假，天气很热，在这样一个天气，没有什么是比家里蹲吹风扇，刷 B 站更好的事情了（Doge），于是我打开了 B 站，然后它给我推送了一个视频：“”西片太太开车预警“，我有点好奇的点进</summary>
      
    
    
    
    <category term="高木" scheme="http://tkgso.fun/categories/%E9%AB%98%E6%9C%A8/"/>
    
    
    <category term="高木" scheme="http://tkgso.fun/tags/%E9%AB%98%E6%9C%A8/"/>
    
    <category term="木创社" scheme="http://tkgso.fun/tags/%E6%9C%A8%E5%88%9B%E7%A4%BE/"/>
    
  </entry>
  
  <entry>
    <title>Hexo使用Github Action实现持续集成</title>
    <link href="http://tkgso.fun/posts/2.html"/>
    <id>http://tkgso.fun/posts/2.html</id>
    <published>2023-08-31T16:00:00.000Z</published>
    <updated>2024-07-17T08:44:25.956Z</updated>
    
    <content type="html"><![CDATA[<p>   我最近决定在GitHub上利用GitHub的Action构建一个稳定且一直能存在的博客，国内访问不一定快，但胜在一直都有。<br>　　<span id="more"></span></p><h3 id="本地运行检查"><a href="#本地运行检查" class="headerlink" title="本地运行检查"></a>本地运行检查</h3><p>　　在进行部署之前，首先我们要确保站点本地是能顺利运行并且能够生成正常的静态站点文件。<br>　　部署一个Hexo博客（部署Hexo请参考Hexo.io的官方文档）<br>　　部署完成后，在站点根目录下运行如下指令（指令可简写为 hexo s）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>　　访问 <a href="http://localhost:4000/">http://localhost:4000</a> 后，在确保站点能够顺利正常显示内容并且运行正常后，再运行如下指令检查站点静态文件是否生成正常（hexo clean不可简写，但 hexo generate可简写为 hexo g）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate</span><br></pre></td></tr></table></figure><p>　　如果能够生成正常，再运行一次 hexo clean清除静态文件，本地运行检查步骤就完成了。</p><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>　　关于如何将仓库上传至GitHub，请自行查询资料，此处只介绍上传后的相关配置<br>　　首先先确认Hexo的配置文档config.yml有类似如下配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repository:</span> <span class="string">git@github.com:PaloMiku/Demo.git</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><blockquote><p>此处Repository请自行设置为你的GitHub Pages仓库，例如xxx.github.io 注意使用SSH地址！</p></blockquote><p>  同时确保你已经安装了Hexo的Git部署插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h3><p><strong>对于一些用户……</strong><br>　　- 对于Windows10用户，可在Store商店安装Ubuntu<br>　　- 对于安卓用户，可安装Termux并安装OpenSSH<br>　　- 对于Linux用户，呃……你都用Linux了应该懂（Doge）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;Hexo Deploy Key&quot;</span> -f github-deploy-key -N <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>这将会在当前目录生成两个文件：<br>github-deploy-key —— 私钥<br>github-deploy-key.pub —— 公钥</p><p>　　我们把<strong>私钥</strong>放到我们存放 Hexo 原始文件的代码仓库里面，用于触发 Actions 时使用。<br>　　把<strong>公钥</strong>放到 GitHub Pages 对应的仓库里面，并开启Action的写入权限，用于 Hexo 部署时的写入工作。<br>　　<strong>配置私钥</strong>：<br>　　1. 在 GitHub 上打开保存 Hexo 的仓库，访问 <strong>Settings -&gt; Secrets -&gt; New secret</strong><br>　　2. 然后在名字（<strong>Name</strong>）部分填写：<strong>HEXO_DEPLOY_KEY</strong><br>　　，一定要注意<strong>大小写</strong>，这个后面的 <strong>GitHub Actions</strong>  用的到，一定不能写错。<br>　　3. 然后在 <strong>Value</strong> 的部分填入 <strong>github-deploy-key</strong> 中的内容<br>　　<strong>配置公钥：</strong><br>　　1. 接下来我们需要访问存放网页的仓库，也就是 Hexo 部署以后的仓库，比如：Username.github.io 这种，访问 <strong>Settings -&gt; Deploy keys</strong><br>　　2. 按 <strong>Add deploy key</strong> 来添加一个新的公钥<br>　　3. 在 Title 中输入：<strong>HEXO_DEPLOY_PUB</strong> 字样，当然也可以填写其它自定义的名字，这里只是备注。<br>　　4. 在 Key 中粘贴 <strong>github</strong>-deploy-key.pub 文件的内容<br>　　5. 勾选 <strong>Allow write access</strong> 来打开写权限，否则会无法写入仓库导致部署失败</p><h3 id="建立Workflow"><a href="#建立Workflow" class="headerlink" title="建立Workflow"></a>建立Workflow</h3><p>　　首先在 Hexo 的仓库中创建一个新文件 <strong>.github&#x2F;workflows&#x2F;push.yml</strong><br>　　，文件名可以自己取，但是一定要放在<br>　　<strong>.github&#x2F;workflows</strong>目录下，也可使用<strong>Action</strong>的新建功能建立文件，文件内容如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">部署站点</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span> [ <span class="string">&quot;main&quot;</span> ]</span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">strategy:</span></span><br><span class="line">      <span class="attr">matrix:</span></span><br><span class="line">        <span class="attr">node-version:</span> [<span class="number">16.</span><span class="string">x</span>]</span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v1</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">设置为</span> <span class="string">Node.js</span> <span class="string">$&#123;&#123;</span> <span class="string">matrix.node-version</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">$&#123;&#123;</span> <span class="string">matrix.node-version</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">配置环境变量</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">HEXO_DEPLOY_KEY:</span> <span class="string">$&#123;&#123;secrets.HEXO_DEPLOY_KEY&#125;&#125;</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          mkdir -p ~/.ssh/</span></span><br><span class="line"><span class="string">          echo &quot;$HEXO_DEPLOY_PRI&quot; &gt; ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">          chmod 600 ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class="line"><span class="string">          git config --global user.name &quot;yzsong06&quot;</span></span><br><span class="line"><span class="string">          git config --global user.email &quot;yzsong06@outlook.com&quot;</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装部署时运行环境</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          npm i -g hexo-cli</span></span><br><span class="line"><span class="string">          npm i</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">生成站点静态文件</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          hexo clean &amp;&amp; hexo generate</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">使用hexo-deployer部署站点</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">hexo</span> <span class="string">deploy</span></span><br></pre></td></tr></table></figure><h3 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h3><p>　　接下来保存文件后一般即可在仓库的Action页面看到反馈结果了，Job出现绿色对号即为部署成功！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;   我最近决定在GitHub上利用GitHub的Action构建一个稳定且一直能存在的博客，国内访问不一定快，但胜在一直都有。&lt;br&gt;</summary>
    
    
    
    <category term="建站" scheme="http://tkgso.fun/categories/%E5%BB%BA%E7%AB%99/"/>
    
    
    <category term="Hexo" scheme="http://tkgso.fun/tags/Hexo/"/>
    
    <category term="Github-Action" scheme="http://tkgso.fun/tags/Github-Action/"/>
    
  </entry>
  
</feed>
